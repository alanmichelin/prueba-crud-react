{"version":3,"sources":["components/listadonombres.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Listadonombres","useState","nombre","setNombre","listanombres","setListaNombres","className","map","item","personaNombre","onClick","id","nuevoArray","filter","deleteNombre","onSubmit","e","preventDefault","nuevoNombre","uniqid","addNombre","onChange","target","value","type","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPA+DeA,EA5DQ,WAAO,IAAD,EAEGC,mBAAS,IAFZ,mBAElBC,EAFkB,KAEVC,EAFU,OAGeF,mBAAS,IAHxB,mBAGlBG,EAHkB,KAGJC,EAHI,KAiBzB,OACI,gCACA,sCACA,sBAAKC,UAAU,MAAf,UACI,sBAAKA,UAAU,MAAf,UACA,oDACA,oBAAIA,UAAU,aAAd,SAEQF,EAAaG,KAAK,SAAAC,GAAI,OAClB,qBACAF,UAAU,kBADV,UAECE,EAAKC,cACN,wBACAH,UAAU,6BACVI,QAAU,YAlBT,SAACC,GAClB,IAAMC,EAAaR,EAAaS,QAAQ,SAAAL,GAAI,OAAGA,EAAKG,KAAOA,KAC3DN,EAAgBO,GAgBiBE,CAAaN,EAAKG,KAFnC,sBAHQ,qBAcpB,sBAAKL,UAAU,MAAf,UACA,4DACA,uBAAMS,SAAU,SAACC,GAAD,OAtCN,SAACA,GACfA,EAAEC,iBACF,IAAMC,EAAc,CAChBP,GAAIQ,MACJV,cAAcP,GAElBG,EAAgB,GAAD,mBAAKD,GAAL,CAAkBc,KACjCf,EAAU,IA+BgBiB,CAAUJ,IAAIV,UAAU,aAA9C,UACI,uBACAe,SAAW,SAACL,GAAD,OAAOb,EAAUa,EAAEM,OAAOC,QACrCjB,UAAU,oBAAoBkB,KAAK,OACnCC,YAAY,oBACZF,MAAOrB,IAEP,uBAAOI,UAAU,yBACjBkB,KAAK,SACLD,MAAM,kCC1CPG,MARf,WACE,OACE,qBAAKpB,UAAU,YAAf,SACE,cAAC,EAAD,OCKSqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6753f964.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport uniqid from 'uniqid'\r\n\r\nconst Listadonombres = () => {\r\n\r\n    const [nombre, setNombre] = useState('')\r\n    const [listanombres, setListaNombres] = useState([])\r\n    const addNombre = (e) =>{\r\n        e.preventDefault()\r\n        const nuevoNombre = {\r\n            id: uniqid(),\r\n            personaNombre:nombre\r\n        }\r\n        setListaNombres([...listanombres,nuevoNombre])\r\n        setNombre('')\r\n    }\r\n    const deleteNombre = (id) =>{\r\n        const nuevoArray = listanombres.filter( item=> item.id !== id)\r\n        setListaNombres(nuevoArray)\r\n    }\r\n    return (\r\n        <div>\r\n        <h2>CRUD</h2>\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n            <h2>Listado de nombres</h2>\r\n            <ul className='list-group'>\r\n                {\r\n                    listanombres.map( item => \r\n                        <li key=\"{item.id}\" \r\n                        className='list-group-item'>\r\n                        {item.personaNombre}\r\n                        <button\r\n                        className='btn btn-danger float-right'\r\n                        onClick={ () => {deleteNombre(item.id)}}>\r\n                            BORRAR\r\n                        </button>\r\n                        </li>\r\n                        \r\n                        )\r\n                }\r\n            </ul>\r\n            </div>\r\n            <div className=\"col\">\r\n            <h2>Formulario agregar nombres</h2>\r\n            <form onSubmit={(e)=> addNombre(e)} className='form-group'>\r\n                <input \r\n                onChange= {(e) => setNombre(e.target.value)} \r\n                className='form-control mb-3' type=\"text\" \r\n                placeholder=\"introducir nombre\"\r\n                value={nombre}\r\n                />\r\n                <input className='btn btn-info btn-block' \r\n                type=\"submit\" \r\n                value=\"Registrar nombre\"/>\r\n            </form>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Listadonombres","\nimport './App.css';\nimport Listadonombres from './components/listadonombres'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Listadonombres/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}